(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{195:function(a,t,s){"use strict";s.r(t);var r=s(0),e=Object(r.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"第7章-函数的扩展"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第7章-函数的扩展","aria-hidden":"true"}},[a._v("#")]),a._v(" 第7章 函数的扩展")]),a._v(" "),s("h2",{attrs:{id:"一、函数参数的默认值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、函数参数的默认值","aria-hidden":"true"}},[a._v("#")]),a._v(" 一、函数参数的默认值")]),a._v(" "),s("h4",{attrs:{id:"_1、示例写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、示例写法","aria-hidden":"true"}},[a._v("#")]),a._v(" 1、示例写法")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function Point(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n}\n")])])]),s("p",[a._v("注意事项：\n*1、参数变量是默认声明的，所以不能用let、const再次声明；\n*2、使用参数默认值时，函数不能有同名参数；\n*3、参数默认值不是传值的，而是每次都重新计算默认值表达式的值，也就是参数默认值是惰性求值的；")]),a._v(" "),s("h4",{attrs:{id:"_2、与解构赋值默认值结合使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、与解构赋值默认值结合使用","aria-hidden":"true"}},[a._v("#")]),a._v(" 2、与解构赋值默认值结合使用")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function foo({x, y = 5} = {}) {\n  console.log(x, y);\n}\n\nfoo() // undefined 5\n")])])]),s("h4",{attrs:{id:"_3、参数默认值的位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、参数默认值的位置","aria-hidden":"true"}},[a._v("#")]),a._v(" 3、参数默认值的位置")]),a._v(" "),s("p",[a._v("定义了默认值的参数，应该是函数的尾参数，这样比较容易看出省略了哪些参数，不是尾部的话，实际上还是没法省略的。")]),a._v(" "),s("h4",{attrs:{id:"_4、作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、作用域","aria-hidden":"true"}},[a._v("#")]),a._v(" 4、作用域")]),a._v(" "),s("p",[a._v("一旦设置了参数的默认值，函数进行声明初始化时，参数会形成一个单独的作用域（context）。等到初始化结束，这个作用域就会消失。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("var x = 1;\n\nfunction f(x, y = x) {\n  console.log(y);\n}\n\nf(2) // 2\n")])])]),s("h4",{attrs:{id:"_5、应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、应用","aria-hidden":"true"}},[a._v("#")]),a._v(" 5、应用")]),a._v(" "),s("p",[a._v("利用参数默认值，可以指定某一个参数不得省略，如果省略就抛出一个错误。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function throwIfMissing() {\n  throw new Error('Missing parameter');\n}\n\nfunction foo(mustBeProvided = throwIfMissing()) {\n  return mustBeProvided;\n}\n\nfoo()\n// Error: Missing parameter\n")])])]),s("h2",{attrs:{id:"二、rest参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、rest参数","aria-hidden":"true"}},[a._v("#")]),a._v(" 二、rest参数")]),a._v(" "),s("p",[a._v("ES6 引入 rest 参数（形式为...变量名），用于获取函数的多余参数，rest 参数搭配的变量是一个数组，该变量将多余的参数放入数组中。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("function add(...values) {\n  let sum = 0;\n\n  for (var val of values) {\n    sum += val;\n  }\n\n  return sum;\n}\n\nadd(2, 5, 3) // 10\n")])])]),s("p",[a._v("注意，rest 参数之后不能再有其他参数（即只能是最后一个参数），否则会报错。")]),a._v(" "),s("h2",{attrs:{id:"三、箭头函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、箭头函数","aria-hidden":"true"}},[a._v("#")]),a._v(" 三、箭头函数")])])},[],!1,null,null,null);t.default=e.exports}}]);